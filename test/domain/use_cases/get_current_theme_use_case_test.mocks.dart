// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_theme_showcase/test/domain/use_cases/get_current_theme_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter/material.dart' as _i7;
import 'package:flutter_theme_showcase/core/errors/failures.dart' as _i5;
import 'package:flutter_theme_showcase/domain/entities/theme_entity.dart'
    as _i6;
import 'package:flutter_theme_showcase/domain/repositories/theme_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ThemeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeRepository extends _i1.Mock implements _i3.ThemeRepository {
  MockThemeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ThemeEntity>> getCurrentTheme() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentTheme,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.ThemeEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.ThemeEntity>(
          this,
          Invocation.method(
            #getCurrentTheme,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ThemeEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.ThemeEntity>>>
      getAvailableThemes() => (super.noSuchMethod(
            Invocation.method(
              #getAvailableThemes,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.ThemeEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.ThemeEntity>>(
              this,
              Invocation.method(
                #getAvailableThemes,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.ThemeEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ThemeEntity>> getThemeById(
          String? themeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getThemeById,
          [themeId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.ThemeEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.ThemeEntity>(
          this,
          Invocation.method(
            #getThemeById,
            [themeId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ThemeEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> saveTheme(_i6.ThemeEntity? theme) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTheme,
          [theme],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #saveTheme,
            [theme],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteTheme(String? themeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTheme,
          [themeId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteTheme,
            [themeId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> setCurrentTheme(String? themeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCurrentTheme,
          [themeId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #setCurrentTheme,
            [themeId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.ThemeMode>> getCurrentThemeMode() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentThemeMode,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.ThemeMode>>.value(
            _FakeEither_0<_i5.Failure, _i7.ThemeMode>(
          this,
          Invocation.method(
            #getCurrentThemeMode,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.ThemeMode>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> setThemeMode(
          _i7.ThemeMode? themeMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setThemeMode,
          [themeMode],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #setThemeMode,
            [themeMode],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, double>> getCurrentFontSize() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentFontSize,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, double>>.value(
            _FakeEither_0<_i5.Failure, double>(
          this,
          Invocation.method(
            #getCurrentFontSize,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, double>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> setFontSize(double? fontSize) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFontSize,
          [fontSize],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #setFontSize,
            [fontSize],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> getCurrentFontFamily() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentFontFamily,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #getCurrentFontFamily,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> setFontFamily(String? fontFamily) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFontFamily,
          [fontFamily],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #setFontFamily,
            [fontFamily],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> themeExists(String? themeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #themeExists,
          [themeId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #themeExists,
            [themeId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, Map<String, dynamic>>>
      getThemePreferences() => (super.noSuchMethod(
            Invocation.method(
              #getThemePreferences,
              [],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, Map<String, dynamic>>>.value(
                    _FakeEither_0<_i5.Failure, Map<String, dynamic>>(
              this,
              Invocation.method(
                #getThemePreferences,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, Map<String, dynamic>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> saveThemePreferences(
          Map<String, dynamic>? preferences) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveThemePreferences,
          [preferences],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #saveThemePreferences,
            [preferences],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> resetToDefault() =>
      (super.noSuchMethod(
        Invocation.method(
          #resetToDefault,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #resetToDefault,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> cacheTheme(
          _i6.ThemeEntity? theme) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheTheme,
          [theme],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #cacheTheme,
            [theme],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #clearCache,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
